{
	"info": {
		"_postman_id": "4dba5573-02a2-4169-8617-83423543143b",
		"name": "SPORT CARE BACK",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Daily Reports",
			"item": [
				{
					"name": "Get all daily reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson[0].dailyFeelings).to.eql(3);",
									"    pm.expect(responseJson[0].size).to.eql(192);",
									"    pm.expect(responseJson[0].weight).to.eql(85);",
									"    pm.expect(responseJson[0].rmssd).to.eql(71);",
									"    pm.expect(responseJson[0].mhr).to.eql(56);",
									"    pm.expect(responseJson[0].bmi).to.eql(20);",
									"    pm.expect(responseJson[0].userId).to.eql(\"616933506854303087c2ca12\");",
									"",
									"     pm.expect(responseJson[1].dailyFeelings).to.eql(1);",
									"    pm.expect(responseJson[1].size).to.eql(null);",
									"    pm.expect(responseJson[1].weight).to.eql(null);",
									"    pm.expect(responseJson[1].rmssd).to.eql(null);",
									"    pm.expect(responseJson[1].mhr).to.eql(null);",
									"    pm.expect(responseJson[1].bmi).to.eql(null);",
									"    pm.expect(responseJson[1].userId).to.eql(\"0\");",
									"});",
									"",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/dailyReports/",
							"host": [
								"{{local}}"
							],
							"path": [
								"dailyReports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a daily reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.dailyFeelings).to.eql(4);",
									"    pm.expect(responseJson.size).to.eql(168);",
									"    pm.expect(responseJson.weight).to.eql(68);",
									"    pm.expect(responseJson.rmssd).to.eql(71);",
									"    pm.expect(responseJson.mhr).to.eql(56);",
									"    pm.expect(responseJson.bmi).to.eql(20);",
									"    pm.expect(responseJson.userId).to.eql(\"616933506854303087c2ca12\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/dailyReports/620e41d790e018cf860a419b",
							"host": [
								"{{local}}"
							],
							"path": [
								"dailyReports",
								"620e41d790e018cf860a419b"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting all for a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson[0].dailyFeelings).to.eql(3);",
									"    pm.expect(responseJson[0].size).to.eql(192);",
									"    pm.expect(responseJson[0].weight).to.eql(85);",
									"    pm.expect(responseJson[0].rmssd).to.eql(71);",
									"    pm.expect(responseJson[0].mhr).to.eql(56);",
									"    pm.expect(responseJson[0].bmi).to.eql(20);",
									"    pm.expect(responseJson[0].userId).to.eql(\"616933506854303087c2ca12\");",
									"",
									"     pm.expect(responseJson[1].dailyFeelings).to.eql(4);",
									"    pm.expect(responseJson[1].size).to.eql(168);",
									"    pm.expect(responseJson[1].weight).to.eql(68);",
									"    pm.expect(responseJson[1].rmssd).to.eql(65);",
									"    pm.expect(responseJson[1].mhr).to.eql(56);",
									"    pm.expect(responseJson[1].bmi).to.eql(20);",
									"    pm.expect(responseJson[1].userId).to.eql(\"616933506854303087c2ca12\");",
									"});",
									"",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/dailyReports/user/616933506854303087c2ca12",
							"host": [
								"{{local}}"
							],
							"path": [
								"dailyReports",
								"user",
								"616933506854303087c2ca12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create daily reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.dailyFeelings).to.eql(4);",
									"    pm.expect(responseJson.size).to.eql(168);",
									"    pm.expect(responseJson.weight).to.eql(68);",
									"    pm.expect(responseJson.rmssd).to.eql(71);",
									"    pm.expect(responseJson.mhr).to.eql(56);",
									"    pm.expect(responseJson.bmi).to.eql(20);",
									"    pm.expect(responseJson.userId).to.eql(\"616933506854303087c2ca12\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"616933506854303087c2ca12\",\n    \"dailyFeelings\" : 4,\n    \"size\": 168,\n    \"weight\": 68,\n    \"rmssd\": 71,\n    \"mhr\": 56,\n    \"bmi\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/dailyReports/",
							"host": [
								"{{local}}"
							],
							"path": [
								"dailyReports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a daily reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.dailyFeelings).to.eql(null);",
									"    pm.expect(responseJson.size).to.eql(192);",
									"    pm.expect(responseJson.weight).to.eql(null);",
									"    pm.expect(responseJson.rmssd).to.eql(null);",
									"    pm.expect(responseJson.mhr).to.eql(null);",
									"    pm.expect(responseJson.bmi).to.eql(null);",
									"    pm.expect(responseJson.userId).to.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"size\": 192\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/dailyReports/619f59734eeaff7e0cdb08e5",
							"host": [
								"{{local}}"
							],
							"path": [
								"dailyReports",
								"619f59734eeaff7e0cdb08e5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a daily reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.eql(null);",
									"",
									"});",
									"",
									"",
									"pm.test(\"Successful POST request\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"size\": 192\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/dailyReports/619f573585168b10c7ca717a",
							"host": [
								"{{local}}"
							],
							"path": [
								"dailyReports",
								"619f573585168b10c7ca717a"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{myToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Sports",
			"item": [
				{
					"name": "Get all sports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson[0].name).to.eql(\"course à pied\");\r",
									"    pm.expect(responseJson[1].name).to.eql(\"natation\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/sports/",
							"host": [
								"{{local}}"
							],
							"path": [
								"sports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a sport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.eql(\"course à pied\");\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/sports/60f1aca16f02c2b0ab96a521",
							"host": [
								"{{local}}"
							],
							"path": [
								"sports",
								"60f1aca16f02c2b0ab96a521"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a sport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.eql(\"sieste\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"sieste\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/sports/",
							"host": [
								"{{local}}"
							],
							"path": [
								"sports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a sport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.eql(\"course à pied\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"course à pied\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/sports/60f1aca16f02c2b0ab96a521",
							"host": [
								"{{local}}"
							],
							"path": [
								"sports",
								"60f1aca16f02c2b0ab96a521"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a sport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.eql(null);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"curling sur bitume\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/sports/623300e8e4f87d00145326d3",
							"host": [
								"{{local}}"
							],
							"path": [
								"sports",
								"623300e8e4f87d00145326d3"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{myToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Cardiac Records",
			"item": [
				{
					"name": "Getting all cardiac records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson[0].rmssd).to.eql(65);\r",
									"    pm.expect(responseJson[0].heartRate).to.eql(90);\r",
									"    pm.expect(responseJson[0].dailyReportId._id).to.eql(\"619f59734eeaff7e0cdb08e5\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/cardiacRecords",
							"host": [
								"{{local}}"
							],
							"path": [
								"cardiacRecords"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting one cardiac record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"  pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.rmssd).to.eql(65);\r",
									"    pm.expect(responseJson.heartRate).to.eql(90);\r",
									"    pm.expect(responseJson.dailyReportId).to.eql(\"619f59734eeaff7e0cdb08e5\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/cardiacRecords/619f83157b03973607dac9e1",
							"host": [
								"{{local}}"
							],
							"path": [
								"cardiacRecords",
								"619f83157b03973607dac9e1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a cardiac record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dailyReportId\": \"619f59734eeaff7e0cdb08e5\",\n    \"rmssd\": 65,\n    \"heartRate\": 90,\n    \"hrData\": [\n        231,\n        313,\n        234,\n        234\n    ],\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/cardiacRecords",
							"host": [
								"{{local}}"
							],
							"path": [
								"cardiacRecords"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a cardiac record",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rmssd\": 65,\r\n}"
						},
						"url": {
							"raw": "{{local}}/cardiacRecords/619f83157b03973607dac9e1",
							"host": [
								"{{local}}"
							],
							"path": [
								"cardiacRecords",
								"619f83157b03973607dac9e1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a cardiac record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.eql(null);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{local}}/cardiacRecords/619f83157b03973607dac9e2",
							"host": [
								"{{local}}"
							],
							"path": [
								"cardiacRecords",
								"619f83157b03973607dac9e2"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{myToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson[0].email).to.eql(\"tibo.inshape@gmail.com\");\r",
									"    pm.expect(responseJson[0].coachId).to.eql(\"616933b36854301bf9c2ca14\");\r",
									"    pm.expect(responseJson[0].firstName).to.eql(\"Tiboooo\");\r",
									"    pm.expect(responseJson[0].lastName).to.eql(\"Inshape\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{local}}/users",
							"host": [
								"{{local}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.email).to.eql(\"tibo.inshape@gmail.com\");\r",
									"    pm.expect(responseJson.coachId).to.eql(\"616933b36854301bf9c2ca14\");\r",
									"    pm.expect(responseJson.firstName).to.eql(\"Tiboooo\");\r",
									"    pm.expect(responseJson.lastName).to.eql(\"Inshape\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "jwt",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTY5MzM1MDY4NTQzMDMwODdjMmNhMTIiLCJpYXQiOjE2Mzc4NDUwMDUsImV4cCI6MTYzNzkzMTQwNX0.kfPbhPuLtcS5hnm3GU-eHP2maGBnG3zzBLQgiMFsrKs",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{local}}/users/61693184aad9f75696aa46ad",
							"host": [
								"{{local}}"
							],
							"path": [
								"users",
								"61693184aad9f75696aa46ad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting all athletes for a coach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson[0].email).to.eql(\"tibo.inshape@gmail.com\");\r",
									"    pm.expect(responseJson[0].coachId).to.eql(\"616933b36854301bf9c2ca14\");\r",
									"    pm.expect(responseJson[0].firstName).to.eql(\"Tiboooo\");\r",
									"    pm.expect(responseJson[0].lastName).to.eql(\"Inshape\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "jwt",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTY5MzM1MDY4NTQzMDMwODdjMmNhMTIiLCJpYXQiOjE2Mzc4NDUwMDUsImV4cCI6MTYzNzkzMTQwNX0.kfPbhPuLtcS5hnm3GU-eHP2maGBnG3zzBLQgiMFsrKs",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{local}}/users/coach/616933b36854301bf9c2ca14",
							"host": [
								"{{local}}"
							],
							"path": [
								"users",
								"coach",
								"616933b36854301bf9c2ca14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.email).to.eql(\"tibo.inshape@gmail.com\");\r",
									"    pm.expect(responseJson.coachId).to.eql(\"616933b36854301bf9c2ca14\");\r",
									"    pm.expect(responseJson.firstName).to.eql(\"Tiboooo\");\r",
									"    pm.expect(responseJson.lastName).to.eql(\"Inshape\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "jwt",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTY5MzM1MDY4NTQzMDMwODdjMmNhMTIiLCJpYXQiOjE2Mzc4NDUwMDUsImV4cCI6MTYzNzkzMTQwNX0.kfPbhPuLtcS5hnm3GU-eHP2maGBnG3zzBLQgiMFsrKs",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Tiboooo\",\n    \"lastName\": \"Inshape\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/users/61693184aad9f75696aa46ad",
							"host": [
								"{{local}}"
							],
							"path": [
								"users",
								"61693184aad9f75696aa46ad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.eql(null);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "jwt",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTY5MzM1MDY4NTQzMDMwODdjMmNhMTIiLCJpYXQiOjE2Mzc4NDUwMDUsImV4cCI6MTYzNzkzMTQwNX0.kfPbhPuLtcS5hnm3GU-eHP2maGBnG3zzBLQgiMFsrKs",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{local}}/users/623464aa91055f001313c93a",
							"host": [
								"{{local}}"
							],
							"path": [
								"users",
								"623464aa91055f001313c93a"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Coachs",
			"item": [
				{
					"name": "Get all coachs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/coachs",
							"host": [
								"{{local}}"
							],
							"path": [
								"coachs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a coach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.userId).to.eql(\"61693184aad9f75696aa46ad\");\r",
									"    pm.expect(responseJson.description).to.eql(\"Wololo coach qui est trop fort\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/coachs/616933b36854301bf9c2ca14",
							"host": [
								"{{local}}"
							],
							"path": [
								"coachs",
								"616933b36854301bf9c2ca14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a coach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.userId).to.eql(\"619f9652db71c20a3872163b\");\r",
									"    pm.expect(responseJson.description).to.eql(\"HEEEUUUUSSSS\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\":\"619f9652db71c20a3872163b\",\n    \"description\": \"HEEEUUUUSSSS\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/coachs/",
							"host": [
								"{{local}}"
							],
							"path": [
								"coachs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a coach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.userId).to.eql(\"619f9652db71c20a3872163b\");\r",
									"    pm.expect(responseJson.description).to.eql(\"Wololo coach qui est trop fort\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\":\"619f9652db71c20a3872163b\",\n    \"description\": \"Wololo coach qui est trop fort\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/coachs/623d8c325abce600130beb7d",
							"host": [
								"{{local}}"
							],
							"path": [
								"coachs",
								"623d8c325abce600130beb7d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a coach",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.eql(null);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{local}}/coachs/619fa1a0db71c2ce1b72163c",
							"host": [
								"{{local}}"
							],
							"path": [
								"coachs",
								"619fa1a0db71c2ce1b72163c"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Trainings",
			"item": [
				{
					"name": "Get all trainings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson[1].userId).to.eql(\"619f9652db71c20a3872163b\");\r",
									"    pm.expect(responseJson[1].sportID).to.eql(\"60f1aca16f02c2b0ab96a521\");\r",
									"    pm.expect(responseJson[1].duration).to.eql(60);\r",
									"    pm.expect(responseJson[1].effort).to.eql(3);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/trainings/",
							"host": [
								"{{local}}"
							],
							"path": [
								"trainings",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a training",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.userId).to.eql(\"619f9652db71c20a3872163b\");\r",
									"    pm.expect(responseJson.sportID).to.eql(\"60f1aca16f02c2b0ab96a521\");\r",
									"    pm.expect(responseJson.duration).to.eql(60);\r",
									"    pm.expect(responseJson.effort).to.eql(3);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/trainings/61bc5e76e08fab7793279521",
							"host": [
								"{{local}}"
							],
							"path": [
								"trainings",
								"61bc5e76e08fab7793279521"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a training",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.userId).to.eql(\"619f9652db71c20a3872163b\");\r",
									"    pm.expect(responseJson.sportID).to.eql(\"60f1aca16f02c2b0ab96a521\");\r",
									"    pm.expect(responseJson.duration).to.eql(60);\r",
									"    pm.expect(responseJson.effort).to.eql(3);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"619f9652db71c20a3872163b\",\n    \"date\": \"2021/11/25\",\n    \"effort\": 3,\n    \"recap\": \"J'ai couru tranquillement au bord de la Garonne.\",\n    \"duration\": 60,\n    \"sportID\": \"60f1aca16f02c2b0ab96a521\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/trainings/",
							"host": [
								"{{local}}"
							],
							"path": [
								"trainings",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a training",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    //pm.expect(responseJson.userId).to.eql(\"619f9652db71c20a3872163b\");\r",
									"    //pm.expect(responseJson.sportId).to.eql(\"60f1aca16f02c2b0ab96a521\");\r",
									"    //pm.expect(responseJson.duration).to.eql(60);\r",
									"    //pm.expect(responseJson.effort).to.eql(3);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recap\": \"J'ai couru tranquillement au bord de la Garonne et c'était bien !!\",\n    \"userdId\": \"619f9652db71c20a3872163b\",\n    \"sportId\": \"60f1aca16f02c2b0ab96a521\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/trainings/619fa9cadb71c2332372163e",
							"host": [
								"{{local}}"
							],
							"path": [
								"trainings",
								"619fa9cadb71c2332372163e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a training",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.eql(null);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{local}}/trainings/619faa3cdb71c2196872163f",
							"host": [
								"{{local}}"
							],
							"path": [
								"trainings",
								"619faa3cdb71c2196872163f"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "Get all messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson[0].conversationId).to.eql(\"61a0f19fe649b274f73b8ca0\");\r",
									"    pm.expect(responseJson[0].userId).to.eql(\"616932566854306e86c2ca0e\");\r",
									"    pm.expect(responseJson[0].message).to.eql(\"Mes performences sont bonnes?\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/messages/",
							"host": [
								"{{local}}"
							],
							"path": [
								"messages",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.conversationId).to.eql(\"61a0f19fe649b274f73b8ca0\");\r",
									"    pm.expect(responseJson.userId).to.eql(\"616932566854306e86c2ca0e\");\r",
									"    pm.expect(responseJson.message).to.eql(\"Mes performences sont bonnes?\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/messages/61a399e8259f509fa609285e",
							"host": [
								"{{local}}"
							],
							"path": [
								"messages",
								"61a399e8259f509fa609285e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.userId).to.eql(\"616932566854306e86c2ca0e\");\r",
									"    pm.expect(responseJson.conversationId).to.eql(\"61a0f19fe649b274f73b8ca0\");\r",
									"    pm.expect(responseJson.message).to.eql(\"Bonjour coach!\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"conversationId\": \"61a0f19fe649b274f73b8ca0\",\r\n    \"userId\": \"616932566854306e86c2ca0e\",\r\n    \"message\": \"Bonjour coach!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/messages/",
							"host": [
								"{{local}}"
							],
							"path": [
								"messages",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.userId).to.eql(\"616932566854306e86c2ca0e\");\r",
									"    pm.expect(responseJson.conversationId).to.eql(\"61a0f19fe649b274f73b8ca0\");\r",
									"    pm.expect(responseJson.message).to.eql(\"Bonjour coach!\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"conversationId\": \"61a0f19fe649b274f73b8ca0\",\r\n    \"userId\": \"616932566854306e86c2ca0e\",\r\n    \"message\": \"Bonjour coach!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/messages/623dc9ed5abce600130beb80",
							"host": [
								"{{local}}"
							],
							"path": [
								"messages",
								"623dc9ed5abce600130beb80"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.eql({ message: 'Message deleted.' });\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{local}}/messages/623dcb225abce600130beb82",
							"host": [
								"{{local}}"
							],
							"path": [
								"messages",
								"623dcb225abce600130beb82"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Conversations",
			"item": [
				{
					"name": "Get all conversations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson[0].members[0]).to.eql(\"616932566854306e86c2ca0e\");\r",
									"    pm.expect(responseJson[0].members[1]).to.eql(\"61693184aad9f75696aa46ad\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/conversations",
							"host": [
								"{{local}}"
							],
							"path": [
								"conversations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a conversation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.members[0]).to.eql(\"616932566854306e86c2ca0e\");\r",
									"    pm.expect(responseJson.members[1]).to.eql(\"61693184aad9f75696aa46ad\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/conversations/61a0f19fe649b274f73b8ca0",
							"host": [
								"{{local}}"
							],
							"path": [
								"conversations",
								"61a0f19fe649b274f73b8ca0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a conversation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The response has all properties\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.members[0]).to.eql(\"616932566854306e86c2ca0e\");\r",
									"    pm.expect(responseJson.members[1]).to.eql(\"61693184aad9f75696aa46ad\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{myToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n            \"senderId\": \"616932566854306e86c2ca0e\",\r\n            \"receiverId\": \"61693184aad9f75696aa46ad\"\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/conversations",
							"host": [
								"{{local}}"
							],
							"path": [
								"conversations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The response has all properties\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.email).to.eql(\"lionel.bonzoumet@epitech.eu\");\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", () => {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"lionel.bonzoumet@epitech.eu\",\n    \"password\": \"azerty\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local}}/login",
					"host": [
						"{{local}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The response has all properties\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.firstName).to.eql(\"Lionel\");\r",
							"    pm.expect(responseJson.lastName).to.eql(\"Bonzoumet\");\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", () => {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"lastName\": \"Bonzoumet\",\n    \"firstName\": \"Lionel\",\n    \"birthdate\": \"1986/12/11\",\n    \"address\": \"76 rue de Bourrassol\",\n    \"role\": true,\n    \"civility\": 1,\n    \"email\": \"lionel.bonzoumet2@gmail.com\",\n    \"password\": \"azerty\",\n    \"coachId\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local}}/register",
					"host": [
						"{{local}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTY5MzM1MDY4NTQzMDMwODdjMmNhMTIiLCJpYXQiOjE2NDYzOTEyMjYsImV4cCI6MTY0NjQ3NzYyNn0.vSamIzQDrsvOWb675zXLQGj-rwzr_J1rxiDtwtiHwII",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "local",
			"value": "https://api.sport-care.net"
		},
		{
			"key": "bearer",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTY5MzM1MDY4NTQzMDMwODdjMmNhMTIiLCJpYXQiOjE2NDU3OTY3MzksImV4cCI6MTY0NTg4MzEzOX0.EsCbKOPj2XwqfeyJVCPZINX5O6OFNmnrpwttz_ZafZ0"
		}
	]
}